@using ACS.Core.Entities.Bases;
@inject SignInManager<BaseUser> SignInManager
@inject ACS.Core.Interfaces.Providers.IUserProvider _UserProvider
@{
    var CurrentUser = await _UserProvider.GetCurrentUserAsync();
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">الملف الشخصي</a></li>
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">البريد الإلكتروني</a></li>*@
    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">الرمز السري</a></li>
    @{
        if (CurrentUser is ApplicationUser)
        {
            <li class="nav-item"><a class="nav-link @ManageNavPages.SubUsersNavClass(ViewContext)" id="subUser" asp-page="./SubUsers">مستخدم فرعي</a></li>
        }
    }
    @*@if (hasExternalLogins)
        {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
        }*@
    @*<li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
        <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">Personal data</a></li>*@
</ul>
